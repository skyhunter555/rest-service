server:
  port: ${SERVICE_PORT}
  servlet:
    context-path: /${SERVICE_NAME:final-demo}

security:
  enabled: true
  oauth2:
    client:
      clientId: ${OAUTH2_CLIENT_ID}
      clientSecret: ${OAUTH2_CLIENT_SECRET}
      scope: openid
      accessTokenUri: ${AUTH_SERVER_URL}/mdpauth/oauth/token
      userAuthorizationUri: ${AUTH_SERVER_URL}/mdpauth/oauth/authorize
    resource:
      jwt:
        key-uri: ${AUTH_SERVER_URL}/mdpauth/oauth/token_key

spring:
  application:
    name: final-demo
  datasource:
    driverClassName: ${DB_DRIVER}
    url: ${DB_URL}
    username: ${DB_LOGIN}
    password: ${DB_PASSWORD}
    hikari:
      connection-test-query: ${DB_TEST_QUERY:}
      maximumPoolSize: ${HIKARI_MAXIMUM_POOLSIZE:10}
      minimumIdle: ${HIKARI_MINIMUM_IDLE:10}
      idleTimeout: ${HIKARI_IDLE_TIMEOUT:600000}
      connectionTimeout: ${HIKARI_CONNECTION_TIMEOUT:30000}
      maxLifetime: ${HIKARI_MAX_LIFETIME:1800000}
  jpa:
    database-platform: ${JPA_DIALECT}
    show-sql: true
    generate-ddl: false
    open-in-view: false
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        globally_quoted_identifiers: ${DB_QUOTED_IDENTIFIERS:false}
        jdbc:
          time_zone: UTC
          lob:
            non_contextual_creation: true

dstrace:
  enabled: ${TRACER_ENABLE:true}
  mode: ${TRACE_MODE:develop}
  collector:
    type: http
    address: ${TRACER_HOST:localhost}:${TRACER_PORT:9411}

dslogging:
  nesting-level-limit: ${LOGGING_NESTING_LEVEL_LIMIT:2}
  items-on-level-limit: ${LOGGING_ITEMS_ON_LEVEL_LIMIT:100}
  exclude-items: ${LOGGING_EXCLUDE_ITEMS:}
  include-items: ${LOGGING_INCLUDE_ITEMS:}

logging:
  config: classpath:log4j2.xml
  level:
    root: ${LOGGING_ROOT_LEVEL:INFO}
    ru.diasoft.micro: ${LOGGING_LEVEL:DEBUG}
    org.hibernate.type: ${LOGGING_HIBERNATE_LEVEL:INFO} #To log values set TRACE
#    kafka: ${LOGGING_KAFKA_LEVEL:INFO}
#    org.apache.kafka.clients: ${LOGGING_KAFKA_LEVEL:INFO}
#    org.springframework.kafka.listener: ${LOGGING_KAFKA_LEVEL:INFO}

chaos:
  monkey:
    enabled: ${CHAOS_MONKEY_ENABLED:false}
    watcher:
      component: ${CM_WATCHER_COMPONENT_ENABLED:false}
      controller: ${CM_WATCHER_CONTROLLER_ENABLED:false}
      repository: ${CM_WATCHER_REPOSITORY_ENABLED:false}
      rest-controller: ${CM_WATCHER_REST_CONTROLLER_ENABLED:true}
      service: ${CM_WATCHER_SERVICE_ENABLED:true}

feign:
  client:
    config:
      default:
        connectTimeout: ${FEIGN_CLIENT_CONNECT_TIMEOUT:300000}
        readTimeout: ${FEIGN_CLIENT_READ_TIMEOUT:300000}

rest-template:
  config:
    connectTimeout: ${REST_TEMPLATE_CONNECT_TIMEOUT:300000}
    readTimeout: ${REST_TEMPLATE_READ_TIMEOUT:300000}


